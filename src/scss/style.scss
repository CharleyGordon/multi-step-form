@use "layout";
@use "colors";
@use "typography";
@import url("https://fonts.googleapis.com/css2?family=Ubuntu:wght@400;500;700&display=swap");
:root {
  font-family: "Ubuntu", sans-serif;
  --padding: min(2rem, 3vh);
  font-size: 16px;
}
$media: 800px;
%stick {
  grid-row: 1;
  grid-column: 1;
}
%has-plan {
  --data: data-monthly;

  span {
    display: none;
    opacity: 0;
    grid-row: 4;
    @media (max-width: #{$media}) {
      grid-column: 2;
      grid-row: 3;
    }
    font-weight: 400;
    color: black;
    translate: 0 -100%;
  }
  &:is(.year-plan) {
    --data: data-yearly;
    span {
      display: block;
      // translate: 0;
      animation: move 0.5s forwards 0.1s;
    }
  }
  &::after {
    content: attr(var(--data));
  }
}
%capitalize {
  &::first-letter {
    text-transform: capitalize;
  }
}
%transition {
  transition: 0.4s;
}
%label-padding {
  padding: 1em;
}
%radius-small {
  border-radius: 0.5vmax;
}
%radius-normal {
  border-radius: 1vmax;
}
%radius-large {
  border-radius: 2vmax;
}
%pointer {
  cursor: pointer;
}
*,
*::before,
*::after {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  font: inherit;
}
.disable {
  pointer-events: none;
  visibility: hidden;
}
body {
  min-height: 100vh;
}
.row-wrapper {
  gap: 1rem;
  @media (min-width: #{$media}) {
    gap: 3rem;
    grid-auto-flow: column;
    grid-auto-columns: 1fr;
  }
}
.wrapper {
  align-items: start;
  counter-reset: step;
  @extend %radius-normal;
  @media (max-width: #{$media}) {
    height: 100vh;
    aside,
    form {
      grid-row: 1;
      grid-column: 1;
    }
  }
  @media (min-width: #{$media}) {
    max-width: max(1200px, 80%);
    justify-self: center;
    grid-template-columns: auto 1fr;
    // column-gap: 10vw;
    // background-color: transparent;
    .sidebar {
      height: 100%;
      grid-row: span 2;
      padding-block: 1.5rem;
      padding-inline: 1.5rem 5rem;
      gap: 2rem;
      border-radius: 1vmax;
      grid-auto-rows: max-content;

      .step {
        grid-auto-flow: column;
        gap: 0.5rem;
        grid-auto-columns: max-content;
        align-self: start;
        &::after {
          content: "step " counter(step) ":\A"attr(data-desc);
          white-space: pre;
        }
      }
    }
    .navigation {
      grid-column: 2;
    }
    form {
      padding-block-start: 5%;
    }
    .navigation {
      padding-block-end: 5%;
    }
    .navigation,
    form {
      margin-inline: 15%;
    }
  }
  //   background-color: map-get($map: , $key: );
}

.sidebar {
  background-image: url("../img/bg-sidebar-desktop.svg");
  background-repeat: no-repeat;
  background-position: center;
  background-size: cover;
  @media (max-width: #{$media}) {
    background-image: url("../img/bg-sidebar-mobile.svg");

    grid-auto-flow: column;
    grid-auto-columns: 1fr;
    padding-inline: 20%;
    padding-block: 10%;
    text-align: center;
  }
  gap: 0.5vw;
}
.step {
  // grid-auto-flow: column;
  // grid-template-columns: max-content;
  // justify-self: center;
  counter-increment: step;
  @media (max-width: #{$media}) {
    // opacity: 0;
    // visibility: collapse;
  }

  &::before {
    width: 13vw;
    max-width: 35px;
    content: counter(step);
    text-align: center;
    display: grid;
    align-items: center;
    aspect-ratio: 1;
    outline: 1px solid white;
    border-radius: 50%;
  }
  &::after {
    content: attr(data-desc);
    @media (max-width: #{$media}) {
      display: none;
    }
  }
}
form {
  @media (max-width: #{$media}) {
    margin-inline: 4vw;
    translate: 0 22vw;
  }
  @extend %radius-normal;
  overflow: hidden;
  isolation: isolate;
}
fieldset {
  gap: 1rem;
  border: none;
  padding-inline: var(--padding);
  padding-block: var(--padding);
  transition: 0.3s ease;
  @extend %stick;
  @extend %checked;
  &:not([data-current]) {
    translate: 200vw;
  }
  &.plan {
    label {
      @extend %radius-normal;
      @extend %has-plan;
      @extend %label-padding;

      overflow: hidden;
      @media (max-width: #{$media}) {
        grid-template-columns: auto 1fr;
        grid-auto-rows: 3ch;
        column-gap: 0.5rem;
        &::after {
          grid-column: 2;
        }
      }
      &::before {
        content: var(--img);
        align-self: start;
        @media (min-width: #{$media}) {
          margin-block-end: 1.3rem;
        }
      }

      &[for="arcade"] {
        --img: url("../img/icon-arcade.svg");
      }
      &[for="advanced"] {
        --img: url("../img/icon-advanced.svg");
      }
      &[for="pro"] {
        --img: url("../img/icon-pro.svg");
      }
    }
    .charge-option {
      grid-auto-flow: column;
      grid-auto-columns: auto;
      gap: 1.2rem;
      padding: 1em 2em;
      border-radius: 2vmax;
      .monthly {
        order: -1;
        @extend %transition;
      }
      .yearly {
        order: 1;
        @extend %transition;
      }
      .charge {
        --width: 37px;
        --indent: 2px;
        order: 0;
        width: var(--width);
        aspect-ratio: 2 / 1;
        border-radius: 2vmax;
        @extend %pointer;
        &::before {
          content: "";
          @extend %transition;
          position: absolute;
          width: calc(var(--width) / 3);
          display: inline-block;
          aspect-ratio: 1;
          background-color: white;
          border-radius: inherit;
          translate: var(--indent);
        }
        &:not(:checked) ~ .monthly {
          color: map-get(colors.$primary, "marine-blue");
        }
        &:checked {
          &::before {
            translate: calc(var(--width) - var(--indent) - 100%);
          }
          ~ .yearly {
            color: map-get(colors.$primary, "marine-blue");
          }
        }
      }
      @media (min-width: #{$media}) {
        align-self: end;
      }
    }
  }
  &.addons {
    label {
      @extend %has-plan;
      grid-template-columns: auto 1fr auto;
      gap: 0.5rem;
      padding: 0.5rem;
      @media (min-width: #{$media}) {
        padding: 1.4rem 0.5rem;
        p,
        &::before {
          margin-inline-start: 2rem;
        }
      }
      p {
        grid-column: 2;
        align-self: end;
      }
      &::before {
        content: attr(data-explain);
        align-self: start;
        grid-column: 2;
        grid-row: 2;
      }
      &::after {
        grid-row: span 2;
        grid-column: 3;
        justify-self: end;
      }
      .identify {
        grid-column: 1;
        grid-row: 1 / span 2;
        width: max(1.2vw, 20px);
        pointer-events: none;
        aspect-ratio: 1;
        appearance: auto;
        align-self: center;
      }
    }
  }
  &.summary {
    .sum-up {
      @extend %radius-normal;
      padding-inline: var(--padding);
      padding-block: var(--padding);
      font-size: 0.9rem;
      gap: 0.5em;
    }
    .total {
      @extend .sum-up;
      background-color: white;
      margin-block-start: -1rem;
      .total-cost {
        justify-self: end;
      }
    }
    grid-auto-rows: min-content;
    .order {
      grid-template-columns: 1fr auto;
      gap: 0.2em;
      grid-auto-rows: inherit;
      &:first-of-type {
        .choice {
          text-transform: capitalize;
        }
        .price {
          grid-row: span 2;
          align-self: center;
        }
      }
    }
  }
  &.thank-you {
    .thanks::before {
      content: url("../img/icon-thank-you.svg");
      display: block;
    }
  }
  input {
    &:not([type="text"], [type="email"], [type="tel"]) {
      appearance: none;
    }

    @extend %transition;
    &:is([type="radio"], .cb) {
      @extend %pointer;
      width: 100%;
      height: 100%;
      @extend %radius-normal;
    }
  }
  legend {
    margin-block-start: var(--padding);
  }
  label {
    // @extend %capitalize;
    gap: 0.1em;
  }
  input {
    padding: 0.5rem;
  }
  ::placeholder {
    font-size: 1rem;
  }
}
.navigation {
  @media (max-width: #{$media}) {
    width: 100%;
    position: fixed;
    bottom: 0;
  }
  padding: 1.5rem 1rem;
  background-color: white;
  & > * {
    @extend %pointer;
    @extend %radius-normal;
    display: inline-block;
    @media (max-width: #{$media}) {
      padding: 0.5em;
    }
    padding: 1em;
  }
}
@keyframes move {
  to {
    translate: 0;
    opacity: 1;
  }
}
